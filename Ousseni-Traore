// Author: Ousseni TRAORE
//Date: 7/6/2022
// Description: The time complexity of above algo.is O(n^3). It only prints the shortest distance. Here we are using dynamic programming to find the shortest paths. Space complexity here is O(n^2). Floyd-Warshall Algorithm is a calculation for finding the most limited way between all the sets of vertices in a weighted chart. This calculation works for both the directed and undirected weighted charts. In any case, it doesn't work for the charts with negative cycles (where the amount of the edges in a cycle is negative).
// A weighted graph is a graph in which each edge has a related numerical value.



// Ousseni Traore Algorithm in Java

public class OusseniTraore {
final static int INF = 9999, nV = 4;

// Implementing ousseni Traore algorithm
void ousseniTraore (int graph[][]) {
int mat[][] = new int[nV][nV];
int  i, j, k;

for (i = 0; i < nV; i++)
for (j = 0; j < nV; j++)
mat[i][j] = graph[i][j];

// Adding vertices individually
for (k = 0; k < nV; k++) {
for (i = 0; i < nV; i++) {
for (j = 0; j < nV; j++) {
if (mat[i][k] + mat[k][j] < mat[i][j])
mat[i][j] = mat[i][k] + mat[k][j];
}
}
}
for (i = 0; i < nV; ++i) {
for (j = 0; j < nV; ++j) {
if (mat[i][j] == INF)
System.out.print("INF ");
else
System.out.print(mat[i][j] + " ");
}
System.out.println();
}
}

public static void main(String[] args) {
int graph[][] = { { 0, 3, INF, 5 }, { 2, 0, INF, 4 }, { INF, 1, 0, INF }, { INF, INF, 2, 0 } };
OusseniTraore  a = new OusseniTraore ();
a.ousseniTraore (graph);
}
}
